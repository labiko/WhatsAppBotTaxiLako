# ==============================
# INSTALLATION SUPABASE CLI - POWERSHELL
# ==============================

Write-Host ""
Write-Host "üöÄ INSTALLATION SUPABASE CLI - POWERSHELL" -ForegroundColor Green
Write-Host "===========================================" -ForegroundColor Green
Write-Host ""

# V√©rifier si on est admin
$isAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)

if (-not $isAdmin) {
    Write-Host "‚ö†Ô∏è  Red√©marrage en tant qu'administrateur..." -ForegroundColor Yellow
    Start-Process PowerShell -Verb RunAs -ArgumentList "-File `"$PSCommandPath`""
    exit
}

Write-Host "‚úÖ Ex√©cution en tant qu'administrateur" -ForegroundColor Green
Write-Host ""

# Cr√©er le dossier Supabase
$supabaseDir = "C:\supabase"
if (!(Test-Path $supabaseDir)) {
    Write-Host "üìÅ Cr√©ation du dossier $supabaseDir..." -ForegroundColor Cyan
    New-Item -ItemType Directory -Path $supabaseDir -Force | Out-Null
}

# T√©l√©charger la derni√®re version
Write-Host "üì• T√©l√©chargement de Supabase CLI..." -ForegroundColor Cyan
$downloadUrl = "https://github.com/supabase/cli/releases/latest/download/supabase_windows_amd64.zip"
$zipPath = "$supabaseDir\supabase.zip"

try {
    Invoke-WebRequest -Uri $downloadUrl -OutFile $zipPath -UseBasicParsing
    Write-Host "‚úÖ T√©l√©chargement termin√©" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur t√©l√©chargement: $($_.Exception.Message)" -ForegroundColor Red
    Read-Host "Appuyez sur Entr√©e pour continuer"
    exit 1
}

# Extraire l'archive
Write-Host "üì¶ Extraction de l'archive..." -ForegroundColor Cyan
try {
    Expand-Archive -Path $zipPath -DestinationPath $supabaseDir -Force
    Remove-Item $zipPath  # Supprimer le zip
    Write-Host "‚úÖ Extraction termin√©e" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur extraction: $($_.Exception.Message)" -ForegroundColor Red
    Read-Host "Appuyez sur Entr√©e pour continuer"
    exit 1
}

# Ajouter au PATH syst√®me
Write-Host "üîß Ajout au PATH syst√®me..." -ForegroundColor Cyan
$currentPath = [Environment]::GetEnvironmentVariable("PATH", "Machine")
if ($currentPath -notlike "*$supabaseDir*") {
    $newPath = $currentPath + ";" + $supabaseDir
    [Environment]::SetEnvironmentVariable("PATH", $newPath, "Machine")
    Write-Host "‚úÖ PATH mis √† jour" -ForegroundColor Green
} else {
    Write-Host "‚úÖ PATH d√©j√† configur√©" -ForegroundColor Green
}

# Mettre √† jour le PATH de la session courante
$env:PATH = $env:PATH + ";" + $supabaseDir

# Tester l'installation
Write-Host ""
Write-Host "üß™ Test de l'installation..." -ForegroundColor Cyan
try {
    $version = & "$supabaseDir\supabase.exe" --version
    Write-Host "‚úÖ Supabase CLI install√© : $version" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur test installation" -ForegroundColor Red
    Read-Host "Appuyez sur Entr√©e pour continuer"
    exit 1
}

Write-Host ""
Write-Host "üéâ INSTALLATION R√âUSSIE !" -ForegroundColor Green
Write-Host "=========================" -ForegroundColor Green
Write-Host ""
Write-Host "üìã PROCHAINES √âTAPES :" -ForegroundColor Yellow
Write-Host "1. Red√©marrez votre terminal/PowerShell"
Write-Host "2. Testez : supabase --version"
Write-Host "3. Connectez-vous : supabase login"
Write-Host "4. Liez le projet : supabase link --project-ref nmwnibzgvwltipmtwhzo"
Write-Host "5. Ex√©cutez : DEPLOYER_V2_HUGGINGFACE.cmd"
Write-Host ""

Read-Host "Appuyez sur Entr√©e pour continuer"