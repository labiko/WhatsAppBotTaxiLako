-- üîê TRIGGER G√âN√âRATION CODE VALIDATION AUTOMATIQUE
-- G√©n√®re un code √† 4 chiffres al√©atoire √† chaque INSERT dans reservations

-- 1Ô∏è‚É£ FONCTION DE G√âN√âRATION DU CODE
CREATE OR REPLACE FUNCTION generate_validation_code()
RETURNS TRIGGER AS $$
BEGIN
    -- G√©n√©rer un code al√©atoire √† 4 chiffres (1000-9999)
    NEW.code_validation := LPAD((FLOOR(RANDOM() * 9000) + 1000)::text, 4, '0');
    
    RAISE NOTICE 'üîê Code validation g√©n√©r√©: % pour r√©servation %', NEW.code_validation, NEW.id;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- 2Ô∏è‚É£ CR√âER LE TRIGGER
DROP TRIGGER IF EXISTS trigger_generate_validation_code ON reservations;
CREATE TRIGGER trigger_generate_validation_code
    BEFORE INSERT ON reservations
    FOR EACH ROW
    EXECUTE FUNCTION generate_validation_code();

-- 3Ô∏è‚É£ TEST DU TRIGGER
-- Ins√©rer une r√©servation test pour v√©rifier
/*
INSERT INTO reservations (client_phone, vehicle_type, position_depart, statut)
VALUES ('+33123456789', 'voiture', ST_GeogFromText('POINT(2.3522 48.8566)'), 'pending');
*/

-- 4Ô∏è‚É£ V√âRIFICATION
SELECT 
    id,
    client_phone,
    code_validation,
    created_at
FROM reservations 
ORDER BY created_at DESC 
LIMIT 5;

-- ‚úÖ TRIGGER CR√â√â - Chaque INSERT g√©n√®rera automatiquement un code √† 4 chiffres