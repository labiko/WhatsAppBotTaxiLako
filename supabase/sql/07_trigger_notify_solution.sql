-- =====================================================
-- FICHIER 7 : SOLUTION TRIGGER AVEC NOTIFY
-- =====================================================
-- Solution alternative sans HTTP - utilise NOTIFY
-- qui sera √©cout√© par l'Edge Function
-- =====================================================

-- Supprimer l'ancien trigger HTTP
DROP TRIGGER IF EXISTS trigger_reservation_accepted_http ON reservations;

-- Cr√©er une fonction simple qui utilise NOTIFY
CREATE OR REPLACE FUNCTION notify_reservation_accepted_simple()
RETURNS trigger AS $$
BEGIN
  -- V√©rifier que la r√©servation passe de 'pending' √† 'accepted'
  IF OLD.statut = 'pending' AND NEW.statut = 'accepted' AND NEW.conducteur_id IS NOT NULL THEN
    
    -- Cr√©er la notification dans la table
    INSERT INTO notifications_pending (reservation_id, type)
    VALUES (NEW.id, 'reservation_accepted')
    ON CONFLICT (reservation_id, type) DO NOTHING;
    
    -- Notifier via PostgreSQL NOTIFY (sera √©cout√© par l'Edge Function)
    PERFORM pg_notify('reservation_accepted', NEW.id::text);
    
    RAISE NOTICE 'üì¢ Notification cr√©√©e et envoy√©e pour r√©servation %', NEW.id;
  END IF;
  
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Cr√©er le nouveau trigger
CREATE TRIGGER trigger_reservation_notify
  AFTER UPDATE OF statut ON reservations
  FOR EACH ROW
  WHEN (OLD.statut = 'pending' AND NEW.statut = 'accepted')
  EXECUTE FUNCTION notify_reservation_accepted_simple();

-- Fonction pour traiter manuellement une notification
CREATE OR REPLACE FUNCTION process_pending_notification(p_reservation_id UUID)
RETURNS text AS $$
DECLARE
  v_result text;
BEGIN
  -- Appeler la fonction Edge via pg_notify
  PERFORM pg_notify('manual_process', p_reservation_id::text);
  
  v_result := 'Notification envoy√©e pour traitement: ' || p_reservation_id;
  RAISE NOTICE '%', v_result;
  
  RETURN v_result;
END;
$$ LANGUAGE plpgsql;

-- V√©rification
DO $$
BEGIN
  IF EXISTS (
    SELECT 1 FROM pg_trigger 
    WHERE tgname = 'trigger_reservation_notify'
  ) THEN
    RAISE NOTICE '‚úÖ Trigger NOTIFY cr√©√© avec succ√®s';
  ELSE
    RAISE EXCEPTION '‚ùå Erreur : Trigger NOTIFY non cr√©√©';
  END IF;
END $$;

-- Test manuel pour la derni√®re r√©servation accept√©e
SELECT process_pending_notification('1ee5a869-9205-49db-922f-860073117d20'::UUID);